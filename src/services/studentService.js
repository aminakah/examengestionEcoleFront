import { api } from './api';

/**
 * Service de gestion des √©l√®ves
 */
export class StudentService {

  // üéì √âL√àVES

  /**
   * R√©cup√©rer la liste des √©l√®ves
   * @param {Object} params - Param√®tres de filtrage et pagination
   */
  async getStudents(params = {}) {
    const queryString = new URLSearchParams(params).toString();
    return api.get(`/eleves${queryString ? `?${queryString}` : ''}`);
  }

  /**
   * Inscrire un nouvel √©l√®ve
   * @param {Object} studentData - Donn√©es de l'√©l√®ve
   */
  async createStudent(studentData) {
    return api.post('/eleves', studentData);
  }

  /**
   * R√©cup√©rer les d√©tails d'un √©l√®ve
   * @param {number} id - ID de l'√©l√®ve
   */
  async getStudent(id) {
    return api.get(`/eleves/${id}`);
  }

  /**
   * Modifier les informations d'un √©l√®ve
   * @param {number} id - ID de l'√©l√®ve
   * @param {Object} studentData - Nouvelles donn√©es
   */
  async updateStudent(id, studentData) {
    return api.put(`/eleves/${id}`, studentData);
  }

  /**
   * Supprimer un √©l√®ve
   * @param {number} id - ID de l'√©l√®ve
   */
  async deleteStudent(id) {
    return api.delete(`/eleves/${id}`);
  }

  /**
   * R√©cup√©rer les notes d'un √©l√®ve
   * @param {number} id - ID de l'√©l√®ve
   * @param {Object} params - Param√®tres de filtrage (matiere, periode, etc.)
   */
  async getStudentGrades(id, params = {}) {
    const queryString = new URLSearchParams(params).toString();
    return api.get(`/eleves/${id}/notes${queryString ? `?${queryString}` : ''}`);
  }

  /**
   * R√©cup√©rer les bulletins d'un √©l√®ve
   * @param {number} id - ID de l'√©l√®ve
   * @param {Object} params - Param√®tres de filtrage (annee_scolaire, periode, etc.)
   */
  async getStudentBulletins(id, params = {}) {
    const queryString = new URLSearchParams(params).toString();
    return api.get(`/eleves/${id}/bulletins${queryString ? `?${queryString}` : ''}`);
  }

  /**
   * Changer un √©l√®ve de classe
   * @param {number} id - ID de l'√©l√®ve
   * @param {Object} changeData - Donn√©es du changement (nouvelle_classe_id, etc.)
   */
  async changeStudentClass(id, changeData) {
    return api.post(`/eleves/${id}/changer-classe`, changeData);
  }

  /**
   * R√©cup√©rer les documents d'un √©l√®ve
   * @param {number} id - ID de l'√©l√®ve
   */
  async getStudentDocuments(id) {
    return api.get(`/eleves/${id}/documents`);
  }

  /**
   * Upload document pour un √©l√®ve
   * @param {number} id - ID de l'√©l√®ve
   * @param {FormData} documentData - Donn√©es du document
   */
  async uploadStudentDocument(id, documentData) {
    return api.post(`/eleves/${id}/documents`, documentData);
  }

  // üéì ROUTES SP√âCIFIQUES √âL√àVE

  /**
   * R√©cup√©rer les notes de l'√©l√®ve connect√©
   */
  async getMyGrades() {
    return api.get('/eleve/mes-notes');
  }

  /**
   * R√©cup√©rer les bulletins de l'√©l√®ve connect√©
   */
  async getMyBulletins() {
    return api.get('/eleve/mes-bulletins');
  }
}

export const studentService = new StudentService();
